apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'
apply plugin: 'io.fabric'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "TVDB_API_KEY", propertyOrEmpty("TVDB_API_KEY"))
        buildConfigField("String", "TMDB_API_KEY", propertyOrEmpty("TMDB_API_KEY"))
        buildConfigField("String", "TRAKT_CLIENT_ID", propertyOrEmpty("TRAKT_CLIENT_ID"))
        buildConfigField("String", "TRAKT_CLIENT_SECRET", propertyOrEmpty("TRAKT_CLIENT_SECRET"))
        buildConfigField("String", "IAP_KEY_A", propertyOrEmpty("IAP_KEY_A"))
        buildConfigField("String", "IAP_KEY_B", propertyOrEmpty("IAP_KEY_B"))
        buildConfigField("String", "IAP_KEY_C", propertyOrEmpty("IAP_KEY_C"))
        buildConfigField("String", "IAP_KEY_D", propertyOrEmpty("IAP_KEY_D"))
        buildConfigField("String", "IMAGE_CACHE_URL", propertyOrNull("IMAGE_CACHE_URL"))
        buildConfigField("String", "IMAGE_CACHE_SECRET", propertyOrEmpty("IMAGE_CACHE_SECRET"))

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "eventBusIndex" : "com.battlelancer.seriesguide.SgEventBusIndex",
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }

    sourceSets {
        androidTest {
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        // for CI server (reports are not public)
        textReport true
        textOutput 'stdout'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    flavorDimensions "flavor"

    productFlavors {
        pure {
            applicationId "com.battlelancer.seriesguide"
            versionCode versions.code
            versionName versions.name

            manifestPlaceholders = [
                    androidBackupKey: rootProject.hasProperty("FREE.ANDROID_BACKUP_KEY")
                            ? rootProject.property("FREE.ANDROID_BACKUP_KEY") : "MISSING"
            ]
        }
        amazon {
            applicationId "com.uwetrottmann.seriesguide.amzn"
            versionCode versions.code
            versionName versions.name
        }
    }

    signingConfigs {
        release {
            if(rootProject.file('keystore.properties').exists()) {
                def props = new Properties()
                props.load(new FileInputStream(rootProject.file('keystore.properties')))

                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            if (isCiBuild) {
                ext.enableCrashlytics = false
            }

            multiDexEnabled false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if(rootProject.file('keystore.properties').exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            if (!rootProject.file('app/fabric.properties').exists()) {
                ext.enableCrashlytics = false
            }

            multiDexEnabled true
            // disable shrinking to use incremental dex in builds
            minifyEnabled false
            // en_XA (LTR) and ar_XB (RTL) to test UI adjusting to unusual glyphs and long strings
            // keep disabled unless needed, slows down build
            pseudoLocalesEnabled false
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(':api')
    implementation project(':libraries:drag-sort-listview')
    implementation project(':libraries:stickygridheaders')

    implementation "com.android.support:support-v4:${versions.supportLibrary}"
    implementation "com.android.support:support-annotations:${versions.supportLibrary}"
    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation "com.android.support:cardview-v7:${versions.supportLibrary}"
    implementation "com.android.support:customtabs:${versions.supportLibrary}"
    implementation "com.android.support:design:${versions.supportLibrary}"
    implementation "com.android.support:palette-v7:${versions.supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${versions.supportLibrary}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:${versions.lifecycle}"
    kapt "android.arch.lifecycle:compiler:${versions.lifecycle}"

    // Room
    implementation "android.arch.persistence.room:runtime:${versions.room}"
    kapt "android.arch.persistence.room:compiler:${versions.room}"

    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    kapt "com.jakewharton:butterknife-compiler:${versions.butterknife}"
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    implementation 'org.greenrobot:eventbus:3.0.0'
    kapt 'org.greenrobot:eventbus-annotation-processor:3.0.1'

    implementation("com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}@aar") {
        transitive = true
    }
    implementation 'com.google.flatbuffers:flatbuffers-java:1.8.0'
    implementation 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "com.uwetrottmann.threetenabp:threetenabp:${versions.threetenABP}"
    implementation "com.jakewharton.timber:timber:${versions.timber}"
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.4'

    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    implementation ("com.uwetrottmann.androidutils:androidutils:${versions.androidUtils}") {
        exclude group: 'com.android.support'
    }
    implementation 'com.uwetrottmann.photoview:library:1.2.4'
    implementation "com.uwetrottmann.thetvdb-java:thetvdb-java:${versions.thetvdb}"
    implementation "com.uwetrottmann.tmdb2:tmdb-java:${versions.tmdb}"
    implementation ("com.uwetrottmann.trakt5:trakt-java:${versions.trakt}") {
        exclude group: 'org.threeten', module: 'threetenbp' // using ThreeTenABP instead
    }

    // https://github.com/palaima/DebugDrawer
    debugImplementation 'io.palaima.debugdrawer:debugdrawer-view:0.7.0'
    releaseImplementation 'io.palaima.debugdrawer:debugdrawer-view-no-op:0.7.0'
    implementation 'io.palaima.debugdrawer:debugdrawer-commons:0.7.0'
    implementation 'io.palaima.debugdrawer:debugdrawer-actions:0.7.0'
    implementation 'io.palaima.debugdrawer:debugdrawer-timber:0.7.0'

    // Google Play Services
    implementation "com.google.android.gms:play-services-analytics:${versions.playServices}"
    implementation "com.google.android.gms:play-services-auth:${versions.playServices}"

    // App Engine
    // https://github.com/google/google-api-java-client/commits/dev
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'com.google.android.google-play-services' // including latest ourselves
        exclude group: 'org.apache.httpcomponents', module: 'httpclient' // unused
        exclude group: 'com.google.guava', module: 'guava-jdk5' // out of date, conflict with dagger
    }

    // Amazon flavor specific
    amazonImplementation files('libs/amazon/in-app-purchasing-2.0.76.jar')

    // Instrumented unit tests
    androidTestImplementation "com.android.support:support-annotations:${versions.supportLibrary}"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation "com.google.truth:truth:${versions.truth}"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    androidTestImplementation 'com.google.code.findbugs:jsr305:3.0.2'
    kaptAndroidTest "com.google.dagger:dagger-compiler:${versions.dagger}"
    androidTestImplementation "android.arch.persistence.room:testing:${versions.room}"

    // Local unit tests
    testImplementation 'junit:junit:4.12'
    testImplementation "com.android.support:support-annotations:${versions.supportLibrary}"
    testImplementation "com.google.truth:truth:${versions.truth}"

}

endpointsClient {
    discoveryDocs = ['src/endpoints/account-v2-rest.discovery',
                     'src/endpoints/episodes-v2-rest.discovery',
                     'src/endpoints/lists-v2-rest.discovery',
                     'src/endpoints/movies-v2-rest.discovery',
                     'src/endpoints/shows-v2-rest.discovery']
}

def propertyOrEmpty(String name) {
    return rootProject.hasProperty(name) ? "\"${rootProject.property(name)}\"" : "\"\""
}

def propertyOrNull(String name) {
    return rootProject.hasProperty(name) ? "\"${rootProject.property(name)}\"" : "null"
}
