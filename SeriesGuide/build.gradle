buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def loadStringPropertyOrPlaceholder(String name) {
    return rootProject.hasProperty(name) ? rootProject.property(name) : "MISSING"
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23

        buildConfigField("String", "TVDB_API_KEY", "\"${loadStringPropertyOrPlaceholder("TVDB_API_KEY")}\"")
        buildConfigField("String", "TMDB_API_KEY", "\"${loadStringPropertyOrPlaceholder("TMDB_API_KEY")}\"")
        buildConfigField("String", "TRAKT_CLIENT_ID", "\"${loadStringPropertyOrPlaceholder("TRAKT_CLIENT_ID")}\"")
        buildConfigField("String", "TRAKT_CLIENT_SECRET", "\"${loadStringPropertyOrPlaceholder("TRAKT_CLIENT_SECRET")}\"")
        buildConfigField("String", "IAP_KEY_A", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_A")}\"")
        buildConfigField("String", "IAP_KEY_B", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_B")}\"")
        buildConfigField("String", "IAP_KEY_C", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_C")}\"")
        buildConfigField("String", "IAP_KEY_D", "\"${loadStringPropertyOrPlaceholder("IAP_KEY_D")}\"")
    }

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    productFlavors {
        free {
            applicationId "com.battlelancer.seriesguide"
            versionCode rootProject.ext.versionCode
            versionName rootProject.ext.versionName

            manifestPlaceholders = [
                    androidBackupKey: rootProject.hasProperty("FREE.ANDROID_BACKUP_KEY")
                            ? rootProject.property("FREE.ANDROID_BACKUP_KEY") : "MISSING"
            ]
        }
        amazon {
            applicationId "com.uwetrottmann.seriesguide.amzn"
            versionCode rootProject.ext.versionCode
            versionName rootProject.ext.versionName
        }
        preview {
            applicationId "com.uwetrottmann.seriesguide.preview"
            versionCode rootProject.ext.versionCode
            versionName rootProject.ext.versionName + "-preview"
        }
    }

    signingConfigs {
        release {
            if(rootProject.file('keystore.properties').exists()) {
                def props = new Properties()
                props.load(new FileInputStream(rootProject.file('keystore.properties')))

                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if(rootProject.file('keystore.properties').exists()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            // currently only obfuscating a small portion for compatibility reasons
            // enable for shrinking to stay well below the 65k method limit
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            pseudoLocalesEnabled true
        }
    }
}

dependencies {
    compile project(':api')
    compile project(':libraries:drag-sort-listview')
    compile project(':libraries:stickygridheaders')
    compile rootProject.ext.libraries.supportv4
    compile rootProject.ext.libraries.supportannotations
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'com.android.support:customtabs:23.1.0'
    compile 'com.android.support:design:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true
    }
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.4'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.uwetrottmann:androidutils:2.1.0'
    compile 'com.uwetrottmann.photoview:library:1.2.4'
    compile 'com.uwetrottmann:tmdb-java:0.8.0'
    compile ('com.uwetrottmann:trakt-java:4.5.0') {
        exclude group: 'org.json', module: 'json'
        exclude group: 'joda-time', module: 'joda-time'
    }
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'net.danlew:android.joda:2.8.2'

    // Google Play Services
    compile 'com.google.android.gms:play-services-base:8.1.0'
    compile 'com.google.android.gms:play-services-identity:8.1.0'
    compile 'com.google.android.gms:play-services-analytics:8.1.0'

    // App Engine
    compile('com.google.api-client:google-api-client-android:1.20.0') {
        exclude group: 'com.google.android.google-play-services'
        exclude(group: 'org.apache.httpcomponents', module: 'httpclient')
    }

    // libs folder
    compile fileTree(dir: 'libs', include: '*.jar')

    // Amazon flavor specific
    amazonCompile files('libs/amazon/in-app-purchasing-2.0.61.jar')

    // Android unit tests
    androidTestCompile rootProject.ext.libraries.supportannotations
    androidTestCompile 'com.squareup.assertj:assertj-android:1.0.0'

}
